// Code generated by protoc-gen-go.
// source: poseidonstats.proto
// DO NOT EDIT!

/*
Package stats is a generated protocol buffer package.

It is generated from these files:
	poseidonstats.proto

It has these top-level messages:
	NodeStats
	NodeStatsResponse
	PodStats
	PodStatsResponse
*/
package stats

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NodeStats struct {
	CpuAllocatable uint64 `protobuf:"varint,1,opt,name=cpu_allocatable,json=cpuAllocatable" json:"cpu_allocatable,omitempty"`
	CpuCapacity    uint64 `protobuf:"varint,2,opt,name=cpu_capacity,json=cpuCapacity" json:"cpu_capacity,omitempty"`
	CpuReservation uint64 `protobuf:"varint,3,opt,name=cpu_reservation,json=cpuReservation" json:"cpu_reservation,omitempty"`
	CpuUtilization uint64 `protobuf:"varint,4,opt,name=cpu_utilization,json=cpuUtilization" json:"cpu_utilization,omitempty"`
	MemAllocatable uint64 `protobuf:"varint,5,opt,name=mem_allocatable,json=memAllocatable" json:"mem_allocatable,omitempty"`
	MemCapacity    uint64 `protobuf:"varint,6,opt,name=mem_capacity,json=memCapacity" json:"mem_capacity,omitempty"`
	MemReservation uint64 `protobuf:"varint,7,opt,name=mem_reservation,json=memReservation" json:"mem_reservation,omitempty"`
	MemUtilization uint64 `protobuf:"varint,8,opt,name=mem_utilization,json=memUtilization" json:"mem_utilization,omitempty"`
}

func (m *NodeStats) Reset()                    { *m = NodeStats{} }
func (m *NodeStats) String() string            { return proto.CompactTextString(m) }
func (*NodeStats) ProtoMessage()               {}
func (*NodeStats) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *NodeStats) GetCpuAllocatable() uint64 {
	if m != nil {
		return m.CpuAllocatable
	}
	return 0
}

func (m *NodeStats) GetCpuCapacity() uint64 {
	if m != nil {
		return m.CpuCapacity
	}
	return 0
}

func (m *NodeStats) GetCpuReservation() uint64 {
	if m != nil {
		return m.CpuReservation
	}
	return 0
}

func (m *NodeStats) GetCpuUtilization() uint64 {
	if m != nil {
		return m.CpuUtilization
	}
	return 0
}

func (m *NodeStats) GetMemAllocatable() uint64 {
	if m != nil {
		return m.MemAllocatable
	}
	return 0
}

func (m *NodeStats) GetMemCapacity() uint64 {
	if m != nil {
		return m.MemCapacity
	}
	return 0
}

func (m *NodeStats) GetMemReservation() uint64 {
	if m != nil {
		return m.MemReservation
	}
	return 0
}

func (m *NodeStats) GetMemUtilization() uint64 {
	if m != nil {
		return m.MemUtilization
	}
	return 0
}

type NodeStatsResponse struct {
}

func (m *NodeStatsResponse) Reset()                    { *m = NodeStatsResponse{} }
func (m *NodeStatsResponse) String() string            { return proto.CompactTextString(m) }
func (*NodeStatsResponse) ProtoMessage()               {}
func (*NodeStatsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type PodStats struct {
	CpuLimit            uint64  `protobuf:"varint,1,opt,name=cpu_limit,json=cpuLimit" json:"cpu_limit,omitempty"`
	CpuRequest          uint64  `protobuf:"varint,2,opt,name=cpu_request,json=cpuRequest" json:"cpu_request,omitempty"`
	CpuUsage            uint64  `protobuf:"varint,3,opt,name=cpu_usage,json=cpuUsage" json:"cpu_usage,omitempty"`
	MemLimit            uint64  `protobuf:"varint,4,opt,name=mem_limit,json=memLimit" json:"mem_limit,omitempty"`
	MemRequest          uint64  `protobuf:"varint,5,opt,name=mem_request,json=memRequest" json:"mem_request,omitempty"`
	MemUsage            uint64  `protobuf:"varint,6,opt,name=mem_usage,json=memUsage" json:"mem_usage,omitempty"`
	MemWorkingSet       uint64  `protobuf:"varint,7,opt,name=mem_working_set,json=memWorkingSet" json:"mem_working_set,omitempty"`
	MemPageFaults       uint64  `protobuf:"varint,8,opt,name=mem_page_faults,json=memPageFaults" json:"mem_page_faults,omitempty"`
	MemPageFaultsRate   float64 `protobuf:"fixed64,9,opt,name=mem_page_faults_rate,json=memPageFaultsRate" json:"mem_page_faults_rate,omitempty"`
	MajorPageFaults     uint64  `protobuf:"varint,10,opt,name=major_page_faults,json=majorPageFaults" json:"major_page_faults,omitempty"`
	MajorPageFaultsRate float64 `protobuf:"fixed64,11,opt,name=major_page_faults_rate,json=majorPageFaultsRate" json:"major_page_faults_rate,omitempty"`
	NetRx               uint64  `protobuf:"varint,12,opt,name=net_rx,json=netRx" json:"net_rx,omitempty"`
	NetRxErrors         uint64  `protobuf:"varint,13,opt,name=net_rx_errors,json=netRxErrors" json:"net_rx_errors,omitempty"`
	NetRxErrorsRate     float64 `protobuf:"fixed64,14,opt,name=net_rx_errors_rate,json=netRxErrorsRate" json:"net_rx_errors_rate,omitempty"`
	NetRxRate           float64 `protobuf:"fixed64,15,opt,name=net_rx_rate,json=netRxRate" json:"net_rx_rate,omitempty"`
	NetTx               uint64  `protobuf:"varint,16,opt,name=net_tx,json=netTx" json:"net_tx,omitempty"`
	NetTxErrors         uint64  `protobuf:"varint,17,opt,name=net_tx_errors,json=netTxErrors" json:"net_tx_errors,omitempty"`
	NetTxErrorsRate     float64 `protobuf:"fixed64,18,opt,name=net_tx_errors_rate,json=netTxErrorsRate" json:"net_tx_errors_rate,omitempty"`
	NetTxRate           float64 `protobuf:"fixed64,19,opt,name=net_tx_rate,json=netTxRate" json:"net_tx_rate,omitempty"`
}

func (m *PodStats) Reset()                    { *m = PodStats{} }
func (m *PodStats) String() string            { return proto.CompactTextString(m) }
func (*PodStats) ProtoMessage()               {}
func (*PodStats) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PodStats) GetCpuLimit() uint64 {
	if m != nil {
		return m.CpuLimit
	}
	return 0
}

func (m *PodStats) GetCpuRequest() uint64 {
	if m != nil {
		return m.CpuRequest
	}
	return 0
}

func (m *PodStats) GetCpuUsage() uint64 {
	if m != nil {
		return m.CpuUsage
	}
	return 0
}

func (m *PodStats) GetMemLimit() uint64 {
	if m != nil {
		return m.MemLimit
	}
	return 0
}

func (m *PodStats) GetMemRequest() uint64 {
	if m != nil {
		return m.MemRequest
	}
	return 0
}

func (m *PodStats) GetMemUsage() uint64 {
	if m != nil {
		return m.MemUsage
	}
	return 0
}

func (m *PodStats) GetMemWorkingSet() uint64 {
	if m != nil {
		return m.MemWorkingSet
	}
	return 0
}

func (m *PodStats) GetMemPageFaults() uint64 {
	if m != nil {
		return m.MemPageFaults
	}
	return 0
}

func (m *PodStats) GetMemPageFaultsRate() float64 {
	if m != nil {
		return m.MemPageFaultsRate
	}
	return 0
}

func (m *PodStats) GetMajorPageFaults() uint64 {
	if m != nil {
		return m.MajorPageFaults
	}
	return 0
}

func (m *PodStats) GetMajorPageFaultsRate() float64 {
	if m != nil {
		return m.MajorPageFaultsRate
	}
	return 0
}

func (m *PodStats) GetNetRx() uint64 {
	if m != nil {
		return m.NetRx
	}
	return 0
}

func (m *PodStats) GetNetRxErrors() uint64 {
	if m != nil {
		return m.NetRxErrors
	}
	return 0
}

func (m *PodStats) GetNetRxErrorsRate() float64 {
	if m != nil {
		return m.NetRxErrorsRate
	}
	return 0
}

func (m *PodStats) GetNetRxRate() float64 {
	if m != nil {
		return m.NetRxRate
	}
	return 0
}

func (m *PodStats) GetNetTx() uint64 {
	if m != nil {
		return m.NetTx
	}
	return 0
}

func (m *PodStats) GetNetTxErrors() uint64 {
	if m != nil {
		return m.NetTxErrors
	}
	return 0
}

func (m *PodStats) GetNetTxErrorsRate() float64 {
	if m != nil {
		return m.NetTxErrorsRate
	}
	return 0
}

func (m *PodStats) GetNetTxRate() float64 {
	if m != nil {
		return m.NetTxRate
	}
	return 0
}

type PodStatsResponse struct {
}

func (m *PodStatsResponse) Reset()                    { *m = PodStatsResponse{} }
func (m *PodStatsResponse) String() string            { return proto.CompactTextString(m) }
func (*PodStatsResponse) ProtoMessage()               {}
func (*PodStatsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*NodeStats)(nil), "stats.NodeStats")
	proto.RegisterType((*NodeStatsResponse)(nil), "stats.NodeStatsResponse")
	proto.RegisterType((*PodStats)(nil), "stats.PodStats")
	proto.RegisterType((*PodStatsResponse)(nil), "stats.PodStatsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PoseidonStats service

type PoseidonStatsClient interface {
	ReceiveNodeStats(ctx context.Context, opts ...grpc.CallOption) (PoseidonStats_ReceiveNodeStatsClient, error)
	ReceivePodStats(ctx context.Context, opts ...grpc.CallOption) (PoseidonStats_ReceivePodStatsClient, error)
}

type poseidonStatsClient struct {
	cc *grpc.ClientConn
}

func NewPoseidonStatsClient(cc *grpc.ClientConn) PoseidonStatsClient {
	return &poseidonStatsClient{cc}
}

func (c *poseidonStatsClient) ReceiveNodeStats(ctx context.Context, opts ...grpc.CallOption) (PoseidonStats_ReceiveNodeStatsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_PoseidonStats_serviceDesc.Streams[0], c.cc, "/stats.PoseidonStats/ReceiveNodeStats", opts...)
	if err != nil {
		return nil, err
	}
	x := &poseidonStatsReceiveNodeStatsClient{stream}
	return x, nil
}

type PoseidonStats_ReceiveNodeStatsClient interface {
	Send(*NodeStats) error
	Recv() (*NodeStatsResponse, error)
	grpc.ClientStream
}

type poseidonStatsReceiveNodeStatsClient struct {
	grpc.ClientStream
}

func (x *poseidonStatsReceiveNodeStatsClient) Send(m *NodeStats) error {
	return x.ClientStream.SendMsg(m)
}

func (x *poseidonStatsReceiveNodeStatsClient) Recv() (*NodeStatsResponse, error) {
	m := new(NodeStatsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *poseidonStatsClient) ReceivePodStats(ctx context.Context, opts ...grpc.CallOption) (PoseidonStats_ReceivePodStatsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_PoseidonStats_serviceDesc.Streams[1], c.cc, "/stats.PoseidonStats/ReceivePodStats", opts...)
	if err != nil {
		return nil, err
	}
	x := &poseidonStatsReceivePodStatsClient{stream}
	return x, nil
}

type PoseidonStats_ReceivePodStatsClient interface {
	Send(*PodStats) error
	Recv() (*PodStatsResponse, error)
	grpc.ClientStream
}

type poseidonStatsReceivePodStatsClient struct {
	grpc.ClientStream
}

func (x *poseidonStatsReceivePodStatsClient) Send(m *PodStats) error {
	return x.ClientStream.SendMsg(m)
}

func (x *poseidonStatsReceivePodStatsClient) Recv() (*PodStatsResponse, error) {
	m := new(PodStatsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for PoseidonStats service

type PoseidonStatsServer interface {
	ReceiveNodeStats(PoseidonStats_ReceiveNodeStatsServer) error
	ReceivePodStats(PoseidonStats_ReceivePodStatsServer) error
}

func RegisterPoseidonStatsServer(s *grpc.Server, srv PoseidonStatsServer) {
	s.RegisterService(&_PoseidonStats_serviceDesc, srv)
}

func _PoseidonStats_ReceiveNodeStats_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PoseidonStatsServer).ReceiveNodeStats(&poseidonStatsReceiveNodeStatsServer{stream})
}

type PoseidonStats_ReceiveNodeStatsServer interface {
	Send(*NodeStatsResponse) error
	Recv() (*NodeStats, error)
	grpc.ServerStream
}

type poseidonStatsReceiveNodeStatsServer struct {
	grpc.ServerStream
}

func (x *poseidonStatsReceiveNodeStatsServer) Send(m *NodeStatsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *poseidonStatsReceiveNodeStatsServer) Recv() (*NodeStats, error) {
	m := new(NodeStats)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _PoseidonStats_ReceivePodStats_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PoseidonStatsServer).ReceivePodStats(&poseidonStatsReceivePodStatsServer{stream})
}

type PoseidonStats_ReceivePodStatsServer interface {
	Send(*PodStatsResponse) error
	Recv() (*PodStats, error)
	grpc.ServerStream
}

type poseidonStatsReceivePodStatsServer struct {
	grpc.ServerStream
}

func (x *poseidonStatsReceivePodStatsServer) Send(m *PodStatsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *poseidonStatsReceivePodStatsServer) Recv() (*PodStats, error) {
	m := new(PodStats)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _PoseidonStats_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stats.PoseidonStats",
	HandlerType: (*PoseidonStatsServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ReceiveNodeStats",
			Handler:       _PoseidonStats_ReceiveNodeStats_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "ReceivePodStats",
			Handler:       _PoseidonStats_ReceivePodStats_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "poseidonstats.proto",
}

func init() { proto.RegisterFile("poseidonstats.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 552 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x94, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0xc6, 0xc9, 0x58, 0x4b, 0x7b, 0xba, 0x2e, 0xad, 0xcb, 0x9f, 0x68, 0x48, 0x30, 0x7a, 0x01,
	0x13, 0x48, 0x03, 0xb1, 0x27, 0x98, 0xf8, 0x73, 0x85, 0xd0, 0x94, 0x75, 0xe2, 0x32, 0xf2, 0xd2,
	0x43, 0x15, 0x88, 0xe3, 0x10, 0x3b, 0xa3, 0xf0, 0x24, 0x3c, 0x07, 0x2f, 0xc1, 0x6b, 0x21, 0x1f,
	0x3b, 0x6e, 0x12, 0xb8, 0xf4, 0x97, 0xef, 0x7c, 0xfe, 0xf9, 0x93, 0x63, 0x58, 0x94, 0x52, 0x61,
	0xb6, 0x96, 0x85, 0xd2, 0x5c, 0xab, 0xd3, 0xb2, 0x92, 0x5a, 0xb2, 0x01, 0x2d, 0x96, 0x7f, 0xf6,
	0x60, 0xfc, 0x51, 0xae, 0xf1, 0xd2, 0xac, 0xd8, 0x33, 0x08, 0xd3, 0xb2, 0x4e, 0x78, 0x9e, 0xcb,
	0x94, 0x6b, 0x7e, 0x9d, 0x63, 0x14, 0x1c, 0x07, 0x27, 0xfb, 0xf1, 0x61, 0x5a, 0xd6, 0xe7, 0x3b,
	0x95, 0x3d, 0x81, 0x03, 0x63, 0x4c, 0x79, 0xc9, 0xd3, 0x4c, 0xff, 0x88, 0xf6, 0xc8, 0x35, 0x49,
	0xcb, 0xfa, 0x8d, 0x93, 0x9a, 0xac, 0x0a, 0x15, 0x56, 0x37, 0x5c, 0x67, 0xb2, 0x88, 0x6e, 0xfb,
	0xac, 0x78, 0xa7, 0x36, 0xc6, 0x5a, 0x67, 0x79, 0xf6, 0xd3, 0x1a, 0xf7, 0xbd, 0xf1, 0x6a, 0xa7,
	0x1a, 0xa3, 0x40, 0xd1, 0xa1, 0x1b, 0x58, 0xa3, 0x40, 0xd1, 0xa3, 0x33, 0x46, 0x4f, 0x37, 0xb4,
	0x74, 0x02, 0x45, 0x9b, 0xce, 0x58, 0xda, 0x74, 0x77, 0x7c, 0x56, 0x8f, 0xce, 0x18, 0xdb, 0x74,
	0x23, 0x6f, 0x6c, 0xd1, 0x2d, 0x17, 0x30, 0xf7, 0x45, 0xc6, 0xa8, 0x4a, 0x59, 0x28, 0x5c, 0xfe,
	0x1e, 0xc0, 0xe8, 0x42, 0xae, 0x6d, 0xbb, 0x0f, 0x61, 0x6c, 0x0e, 0x9a, 0x67, 0x22, 0xd3, 0xae,
	0xd7, 0x51, 0x5a, 0xd6, 0x1f, 0xcc, 0x9a, 0x3d, 0x86, 0x89, 0xad, 0xeb, 0x5b, 0x8d, 0x4a, 0xbb,
	0x42, 0x81, 0xaa, 0x22, 0xa5, 0x99, 0xae, 0x15, 0xdf, 0xa0, 0x6b, 0xd2, 0x4c, 0x5f, 0x99, 0xb5,
	0xf9, 0x68, 0x28, 0x6d, 0xb4, 0x6d, 0x6f, 0x24, 0x50, 0xf8, 0x68, 0x7b, 0x56, 0x1b, 0x6d, 0x3b,
	0x03, 0x3a, 0xa7, 0x8f, 0xa6, 0x33, 0x52, 0xf4, 0xd0, 0x4f, 0xdb, 0xe8, 0xa7, 0xb6, 0x80, 0xef,
	0xb2, 0xfa, 0x9a, 0x15, 0x9b, 0x44, 0xa1, 0x76, 0x4d, 0x4d, 0x05, 0x8a, 0x4f, 0x56, 0xbd, 0x44,
	0xdd, 0xf8, 0x4a, 0xbe, 0xc1, 0xe4, 0x33, 0xaf, 0x73, 0xad, 0x5c, 0x51, 0xc6, 0x77, 0xc1, 0x37,
	0xf8, 0x9e, 0x44, 0xf6, 0x12, 0xee, 0xf6, 0x7c, 0x49, 0xc5, 0x35, 0x46, 0xe3, 0xe3, 0xe0, 0x24,
	0x88, 0xe7, 0x1d, 0x73, 0xcc, 0x35, 0xb2, 0xe7, 0x30, 0x17, 0xfc, 0x8b, 0xac, 0x3a, 0xd1, 0x40,
	0xd1, 0x21, 0x7d, 0x68, 0x85, 0x9f, 0xc1, 0xfd, 0x7f, 0xbc, 0x36, 0x7e, 0x42, 0xf1, 0x8b, 0xde,
	0x00, 0x6d, 0x70, 0x0f, 0x86, 0x05, 0xea, 0xa4, 0xda, 0x46, 0x07, 0x94, 0x3a, 0x28, 0x50, 0xc7,
	0x5b, 0xb6, 0x84, 0xa9, 0x95, 0x13, 0xac, 0x2a, 0x59, 0xa9, 0x68, 0x6a, 0xaf, 0x11, 0x7d, 0x7d,
	0x47, 0x12, 0x7b, 0x01, 0xac, 0xe3, 0xb1, 0x7b, 0x1d, 0xd2, 0x5e, 0x61, 0xcb, 0x48, 0xfb, 0x3c,
	0x82, 0x89, 0x33, 0x93, 0x2b, 0x24, 0xd7, 0x98, 0x5c, 0x6d, 0x0e, 0xbd, 0x8d, 0x66, 0x9e, 0x63,
	0xe5, 0x39, 0xb4, 0xe7, 0x98, 0x7b, 0x8e, 0x55, 0x8f, 0x43, 0x77, 0x39, 0x98, 0xe7, 0x58, 0xfd,
	0x87, 0x43, 0x3b, 0x8e, 0x85, 0xe7, 0x58, 0x11, 0xc7, 0x92, 0xc1, 0xac, 0xb9, 0xb3, 0xcd, 0x45,
	0x7e, 0xfd, 0x2b, 0x80, 0xe9, 0x85, 0x7b, 0x46, 0xec, 0x6d, 0x7e, 0x0b, 0xb3, 0x18, 0x53, 0xcc,
	0x6e, 0x70, 0xf7, 0x7e, 0xcc, 0x4e, 0xed, 0x13, 0xe3, 0x95, 0xa3, 0xa8, 0xaf, 0xf8, 0x5f, 0xe3,
	0xd6, 0x49, 0xf0, 0x2a, 0x60, 0xe7, 0x10, 0xba, 0x14, 0xff, 0x9b, 0x84, 0x6e, 0xa4, 0x11, 0x8e,
	0x1e, 0xf4, 0x84, 0x6e, 0xc4, 0xf5, 0x90, 0x1e, 0xb4, 0xb3, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x9c, 0x5b, 0xd4, 0xae, 0xe7, 0x04, 0x00, 0x00,
}
