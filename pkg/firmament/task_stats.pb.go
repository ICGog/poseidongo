// Code generated by protoc-gen-go.
// source: task_stats.proto
// DO NOT EDIT!

package firmament

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TaskStats struct {
	TaskId    uint64 `protobuf:"varint,1,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
	Hostname  string `protobuf:"bytes,2,opt,name=hostname" json:"hostname,omitempty"`
	Timestamp uint64 `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	// CPU stats in millicores.
	CpuLimit   uint64 `protobuf:"varint,4,opt,name=cpu_limit,json=cpuLimit" json:"cpu_limit,omitempty"`
	CpuRequest uint64 `protobuf:"varint,5,opt,name=cpu_request,json=cpuRequest" json:"cpu_request,omitempty"`
	CpuUsage   uint64 `protobuf:"varint,6,opt,name=cpu_usage,json=cpuUsage" json:"cpu_usage,omitempty"`
	// Memory stats in Kb.
	MemLimit            uint64  `protobuf:"varint,7,opt,name=mem_limit,json=memLimit" json:"mem_limit,omitempty"`
	MemRequest          uint64  `protobuf:"varint,8,opt,name=mem_request,json=memRequest" json:"mem_request,omitempty"`
	MemUsage            uint64  `protobuf:"varint,9,opt,name=mem_usage,json=memUsage" json:"mem_usage,omitempty"`
	MemWorkingSet       uint64  `protobuf:"varint,10,opt,name=mem_working_set,json=memWorkingSet" json:"mem_working_set,omitempty"`
	MemPageFaults       uint64  `protobuf:"varint,11,opt,name=mem_page_faults,json=memPageFaults" json:"mem_page_faults,omitempty"`
	MemPageFaultsRate   float64 `protobuf:"fixed64,12,opt,name=mem_page_faults_rate,json=memPageFaultsRate" json:"mem_page_faults_rate,omitempty"`
	MajorPageFaults     uint64  `protobuf:"varint,13,opt,name=major_page_faults,json=majorPageFaults" json:"major_page_faults,omitempty"`
	MajorPageFaultsRate float64 `protobuf:"fixed64,14,opt,name=major_page_faults_rate,json=majorPageFaultsRate" json:"major_page_faults_rate,omitempty"`
	// Network stats in Kb.
	NetRx           uint64  `protobuf:"varint,15,opt,name=net_rx,json=netRx" json:"net_rx,omitempty"`
	NetRxErrors     uint64  `protobuf:"varint,16,opt,name=net_rx_errors,json=netRxErrors" json:"net_rx_errors,omitempty"`
	NetRxErrorsRate float64 `protobuf:"fixed64,17,opt,name=net_rx_errors_rate,json=netRxErrorsRate" json:"net_rx_errors_rate,omitempty"`
	NetRxRate       float64 `protobuf:"fixed64,18,opt,name=net_rx_rate,json=netRxRate" json:"net_rx_rate,omitempty"`
	NetTx           uint64  `protobuf:"varint,19,opt,name=net_tx,json=netTx" json:"net_tx,omitempty"`
	NetTxErrors     uint64  `protobuf:"varint,20,opt,name=net_tx_errors,json=netTxErrors" json:"net_tx_errors,omitempty"`
	NetTxErrorsRate float64 `protobuf:"fixed64,21,opt,name=net_tx_errors_rate,json=netTxErrorsRate" json:"net_tx_errors_rate,omitempty"`
	NetTxRate       float64 `protobuf:"fixed64,22,opt,name=net_tx_rate,json=netTxRate" json:"net_tx_rate,omitempty"`
}

func (m *TaskStats) Reset()                    { *m = TaskStats{} }
func (m *TaskStats) String() string            { return proto.CompactTextString(m) }
func (*TaskStats) ProtoMessage()               {}
func (*TaskStats) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{0} }

func (m *TaskStats) GetTaskId() uint64 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *TaskStats) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *TaskStats) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *TaskStats) GetCpuLimit() uint64 {
	if m != nil {
		return m.CpuLimit
	}
	return 0
}

func (m *TaskStats) GetCpuRequest() uint64 {
	if m != nil {
		return m.CpuRequest
	}
	return 0
}

func (m *TaskStats) GetCpuUsage() uint64 {
	if m != nil {
		return m.CpuUsage
	}
	return 0
}

func (m *TaskStats) GetMemLimit() uint64 {
	if m != nil {
		return m.MemLimit
	}
	return 0
}

func (m *TaskStats) GetMemRequest() uint64 {
	if m != nil {
		return m.MemRequest
	}
	return 0
}

func (m *TaskStats) GetMemUsage() uint64 {
	if m != nil {
		return m.MemUsage
	}
	return 0
}

func (m *TaskStats) GetMemWorkingSet() uint64 {
	if m != nil {
		return m.MemWorkingSet
	}
	return 0
}

func (m *TaskStats) GetMemPageFaults() uint64 {
	if m != nil {
		return m.MemPageFaults
	}
	return 0
}

func (m *TaskStats) GetMemPageFaultsRate() float64 {
	if m != nil {
		return m.MemPageFaultsRate
	}
	return 0
}

func (m *TaskStats) GetMajorPageFaults() uint64 {
	if m != nil {
		return m.MajorPageFaults
	}
	return 0
}

func (m *TaskStats) GetMajorPageFaultsRate() float64 {
	if m != nil {
		return m.MajorPageFaultsRate
	}
	return 0
}

func (m *TaskStats) GetNetRx() uint64 {
	if m != nil {
		return m.NetRx
	}
	return 0
}

func (m *TaskStats) GetNetRxErrors() uint64 {
	if m != nil {
		return m.NetRxErrors
	}
	return 0
}

func (m *TaskStats) GetNetRxErrorsRate() float64 {
	if m != nil {
		return m.NetRxErrorsRate
	}
	return 0
}

func (m *TaskStats) GetNetRxRate() float64 {
	if m != nil {
		return m.NetRxRate
	}
	return 0
}

func (m *TaskStats) GetNetTx() uint64 {
	if m != nil {
		return m.NetTx
	}
	return 0
}

func (m *TaskStats) GetNetTxErrors() uint64 {
	if m != nil {
		return m.NetTxErrors
	}
	return 0
}

func (m *TaskStats) GetNetTxErrorsRate() float64 {
	if m != nil {
		return m.NetTxErrorsRate
	}
	return 0
}

func (m *TaskStats) GetNetTxRate() float64 {
	if m != nil {
		return m.NetTxRate
	}
	return 0
}

func init() {
	proto.RegisterType((*TaskStats)(nil), "firmament.TaskStats")
}

func init() { proto.RegisterFile("task_stats.proto", fileDescriptor14) }

var fileDescriptor14 = []byte{
	// 405 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x93, 0xcf, 0x8e, 0xd3, 0x30,
	0x10, 0xc6, 0x15, 0xd8, 0xcd, 0x36, 0x13, 0x4a, 0xb6, 0xde, 0x3f, 0x58, 0x80, 0xa0, 0xda, 0x03,
	0xaa, 0x40, 0x82, 0xc3, 0x3e, 0x03, 0x48, 0x48, 0x1c, 0x50, 0x1a, 0xc4, 0x31, 0x32, 0xed, 0x34,
	0x84, 0xd6, 0x49, 0xb0, 0x27, 0xa2, 0x4f, 0xc0, 0x73, 0x23, 0x8f, 0x5b, 0x93, 0x14, 0x8e, 0x9e,
	0xef, 0x37, 0xbf, 0xf9, 0x2e, 0x86, 0x4b, 0x52, 0x76, 0x5b, 0x5a, 0x52, 0x64, 0xdf, 0x76, 0xa6,
	0xa5, 0x56, 0x24, 0x9b, 0xda, 0x68, 0xa5, 0xb1, 0xa1, 0xbb, 0xdf, 0x31, 0x24, 0x85, 0xb2, 0xdb,
	0xa5, 0x8b, 0xc5, 0x13, 0xb8, 0x60, 0xb8, 0x5e, 0xcb, 0x68, 0x1e, 0x2d, 0xce, 0xf2, 0xd8, 0x3d,
	0x3f, 0xae, 0xc5, 0x53, 0x98, 0x7c, 0x6f, 0x2d, 0x35, 0x4a, 0xa3, 0x7c, 0x30, 0x8f, 0x16, 0x49,
	0x1e, 0xde, 0xe2, 0x39, 0x24, 0x54, 0x6b, 0xb4, 0xa4, 0x74, 0x27, 0x1f, 0xf2, 0xda, 0xdf, 0x81,
	0x78, 0x06, 0xc9, 0xaa, 0xeb, 0xcb, 0x5d, 0xad, 0x6b, 0x92, 0x67, 0x9c, 0x4e, 0x56, 0x5d, 0xff,
	0xc9, 0xbd, 0xc5, 0x4b, 0x48, 0x5d, 0x68, 0xf0, 0x67, 0x8f, 0x96, 0xe4, 0x39, 0xc7, 0xb0, 0xea,
	0xfa, 0xdc, 0x4f, 0x8e, 0xdb, 0xbd, 0x55, 0x15, 0xca, 0x38, 0x6c, 0x7f, 0x71, 0x6f, 0x17, 0x6a,
	0xd4, 0x07, 0xf5, 0x85, 0x0f, 0x35, 0xea, 0xa0, 0x76, 0xe1, 0x51, 0x3d, 0xf1, 0x6a, 0x8d, 0x7a,
	0xa0, 0x76, 0x80, 0x57, 0x27, 0x61, 0xdb, 0xab, 0x5f, 0x41, 0xe6, 0xc2, 0x5f, 0xad, 0xd9, 0xd6,
	0x4d, 0x55, 0x5a, 0x24, 0x09, 0x8c, 0x4c, 0x35, 0xea, 0xaf, 0x7e, 0xba, 0x44, 0x3a, 0x72, 0x9d,
	0xaa, 0xb0, 0xdc, 0xa8, 0x7e, 0x47, 0x56, 0xa6, 0x81, 0xfb, 0xac, 0x2a, 0xfc, 0xc0, 0x43, 0xf1,
	0x0e, 0xae, 0x4f, 0xb8, 0xd2, 0x28, 0x42, 0xf9, 0x68, 0x1e, 0x2d, 0xa2, 0x7c, 0x36, 0x82, 0x73,
	0x45, 0x28, 0x5e, 0xc3, 0x4c, 0xab, 0x1f, 0xad, 0x19, 0xa9, 0xa7, 0xac, 0xce, 0x38, 0x18, 0xc8,
	0xef, 0xe1, 0xf6, 0x1f, 0xd6, 0xeb, 0x1f, 0xb3, 0xfe, 0xea, 0x64, 0x81, 0x0f, 0xdc, 0x40, 0xdc,
	0x20, 0x95, 0x66, 0x2f, 0x33, 0xb6, 0x9e, 0x37, 0x48, 0xf9, 0x5e, 0xdc, 0xc1, 0xd4, 0x8f, 0x4b,
	0x34, 0xa6, 0x35, 0x56, 0x5e, 0x72, 0x9a, 0x72, 0xfa, 0x9e, 0x47, 0xe2, 0x0d, 0x88, 0x11, 0xe3,
	0x6f, 0xcd, 0xf8, 0x56, 0x36, 0x00, 0xf9, 0xce, 0x0b, 0x48, 0x0f, 0x30, 0x53, 0x82, 0xa9, 0x84,
	0xa9, 0x61, 0x0f, 0xda, 0xcb, 0xab, 0xd0, 0xa3, 0x08, 0x3d, 0x28, 0xf4, 0xb8, 0x0e, 0x3d, 0x8a,
	0x93, 0x1e, 0x34, 0xee, 0x71, 0x13, 0x7a, 0x14, 0xff, 0xe9, 0x41, 0x87, 0x1e, 0xb7, 0xa1, 0x47,
	0xc1, 0x3d, 0xbe, 0xc5, 0xfc, 0x35, 0xee, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0x24, 0x47, 0xaf,
	0x17, 0x2e, 0x03, 0x00, 0x00,
}
